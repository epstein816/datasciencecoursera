library(haven)
dataset <- read_stata(NULL)
View(dataset)
`1950.1960.dat` <- read.table("~/School/UCD/Research/Marina/1950-1960.dat.gz", quote="\"", comment.char="")
View(`1950.1960.dat`)
View(`1950.1960.dat`)
View(`1950.1960.dat`)
getwd()
install.packages(KernSmooth)
library(KernSmooth)
swirl()
library(swirl)
swirl()
swirl()
library(swirl)
swirl()
pollutantmean <- function(directory, pollutant, id = 1:332){
setwd(paste("C:/Users/Epste/code/datasciencecoursera/", directory, sep=""))
filelist <- list.files(getwd(), full.names = TRUE)
dat <- data.frame()
for(i in id){
dat <- rbind(dat, read.csv(filelist[i]))
}
mean1 <- mean(dat[, pollutant], na.rm = TRUE)
print(mean1)
}
complete <- function(directory, id = 1:332){
setwd(paste("C:/Users/Epste/code/datasciencecoursera/", directory, sep=""))
filelist <- list.files(getwd(), full.names = TRUE)
noblist <- integer()
for (i in id) { #use this loop to create a vector of nobs
noblist <- c(noblist, nrow(na.omit(read.csv(filelist[i]))))
}
print(data.frame(id = id, nob = noblist))
}
corr <- function(directory, threshold = 0){
setwd(paste("C:/Users/Epste/code/datasciencecoursera/", directory, sep=""))
filelist <- list.files(getwd(), full.names = TRUE)
nobs <-complete("specdata")
obs <- as.numeric(nobs[nobs$nob>threshold, "id"])
dat.c <- data.frame()
for(i in obs){
dat.c <- rbind(dat.c, read.csv(filelist[i]))
dat.c <- na.omit(dat.c)
}
corrs <- numeric()
for (i in obs) {
c.obs <- dat.c[dat.c$ID == i,]
corrs <- c(corrs, cor(c.obs$sulfate, c.obs$nitrate))
}
print(corrs)
}
sum(2,4)
play()
pollutantmean("specdata", nitrate, c(1:10, 11))
pollutantmean("specdata", "nitrate", c(1:10, 11))
nxt()
head(flags)
dim(flags)
dim(flags)
class(flaggs)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
play()
nxt()
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(matrix)
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(unique_vals, length)
lapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, FUN.VALUE = numeric(1))
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
bye()
